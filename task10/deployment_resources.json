{
  "lambda-basic-execution": {
    "policy_content": {
      "Statement": [
        {
          "Action": [
            "logs:CreateLogGroup",
            "logs:CreateLogStream",
            "logs:PutLogEvents",
            "dynamodb:GetItem",
            "dynamodb:Query",
            "dynamodb:PutItem",
            "dynamodb:Batch*",
            "dynamodb:DeleteItem",
            "ssm:PutParameter",
            "ssm:GetParameter",
            "kms:Decrypt",
            "cognito-idp:SignUp",
            "cognito-idp:AdminCreateUser",
            "cognito-idp:AdminSetUserPassword",
            "cognito-idp:ListUserPools",
            "cognito-idp:AdminRespondToAuthChallenge",
            "cognito-idp:AdminUpdateUserAttributes",
            "cognito-idp:ListUserPoolClients",
            "cognito-idp:ListUsers",
            "cognito-idp:AdminUpdateUserAttributes",
            "cognito-idp:AdminInitiateAuth",
            "cognito-idp:AdminConfirmSignUp",
            "dynamodb:GetItem",
            "dynamodb:Query",
            "dynamodb:PutItem",
            "dynamodb:Batch*",
            "dynamodb:DeleteItem",
            "dynamodb:GetRecords",
            "dynamodb:GetShardIterator",
            "dynamodb:DescribeStream",
            "dynamodb:ListStreams",
            "dynamodb:UpdateItem",
            "dynamodb:Scan"
          ],
          "Effect": "Allow",
          "Resource": "*"
        }
      ],
      "Version": "2012-10-17"
    },
    "resource_type": "iam_policy"
  },
  "api_handler-role": {
    "predefined_policies": [],
    "principal_service": "lambda",
    "custom_policies": [
      "lambda-basic-execution"
    ],
    "resource_type": "iam_role",
    "allowed_accounts": [
      "${account_id}"
    ]
  },
  "simple-booking-userpool": {
    "resource_type": "cognito_idp",
    "region": "eu-central-1",
    "password_policy": {
      "require_symbols": false
    },
    "custom_attributes": [
      {
        "name": "customer",
        "type": "String"
      },
      {
        "name": "latest_login",
        "type": "String"
      }
    ],
    "client": {
      "client_name": "test_userpool",
      "generate_secret": false,
      "explicit_auth_flows": [
        "ALLOW_ADMIN_USER_PASSWORD_AUTH",
        "ALLOW_CUSTOM_AUTH",
        "ALLOW_USER_SRP_AUTH",
        "ALLOW_REFRESH_TOKEN_AUTH"
      ]
    }
  },
  "task10_api": {
    "deploy_stage": "api",
    "authorizers": {
      "authorizer": {
        "type": "COGNITO_USER_POOLS",
        "identity_source": "method.request.header.Authorization",
        "user_pools": [
          "simple-booking-userpool"
        ],
        "ttl": 300
      }
    },
    "dependencies": [
      {
        "resource_name": "api_handler",
        "resource_type": "lambda"
      }
    ],
    "resources": {
      "/signup": {
        "enable_cors": true,
        "POST": {
          "integration_request_body_template": {},
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "method_request_parameters": {},
          "default_error_pattern": true,
          "integration_passthrough_behavior": "WHEN_NO_TEMPLATES",
          "lambda_name": "api_handler",
          "enable_proxy": true
        }
      },
      "/signin": {
        "enable_cors": true,
        "POST": {
          "integration_request_body_template": {},
          "authorization_type": "NONE",
          "integration_type": "lambda",
          "method_request_parameters": {},
          "default_error_pattern": true,
          "integration_passthrough_behavior": "WHEN_NO_TEMPLATES",
          "lambda_name": "api_handler",
          "enable_proxy": true
        }
      },
      "/tables": {
        "enable_cors": true,
        "GET": {
          "integration_request_body_template": {},
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "method_request_parameters": {},
          "default_error_pattern": true,
          "integration_passthrough_behavior": "WHEN_NO_TEMPLATES",
          "lambda_name": "api_handler",
          "enable_proxy": true
        },
        "POST": {
          "integration_request_body_template": {},
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "method_request_parameters": {},
          "default_error_pattern": true,
          "integration_passthrough_behavior": "WHEN_NO_TEMPLATES",
          "lambda_name": "api_handler",
          "enable_proxy": true
        }
      },
      "/tables/{tableId}": {
        "enable_cors": true,
        "GET": {
          "integration_request_body_template": {},
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "method_request_parameters": {},
          "default_error_pattern": true,
          "integration_passthrough_behavior": "WHEN_NO_TEMPLATES",
          "lambda_name": "api_handler",
          "enable_proxy": true
        }
      },
      "/reservations": {
        "enable_cors": true,
        "GET": {
          "integration_request_body_template": {},
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "method_request_parameters": {},
          "default_error_pattern": true,
          "integration_passthrough_behavior": "WHEN_NO_TEMPLATES",
          "lambda_name": "api_handler",
          "enable_proxy": true
        },
        "POST": {
          "integration_request_body_template": {},
          "authorization_type": "authorizer",
          "integration_type": "lambda",
          "method_request_parameters": {},
          "default_error_pattern": true,
          "integration_passthrough_behavior": "WHEN_NO_TEMPLATES",
          "lambda_name": "api_handler",
          "enable_proxy": true
        }
      }
    },
    "resource_type": "api_gateway"
  },
  "Tables": {
    "resource_type": "dynamodb_table",
    "hash_key_name": "id",
    "hash_key_type": "N",
    "read_capacity": 1,
    "write_capacity": 1,
    "stream_view_type": "NEW_IMAGE"
  },
  "Reservations": {
    "resource_type": "dynamodb_table",
    "hash_key_name": "id",
    "hash_key_type": "S",
    "read_capacity": 1,
    "write_capacity": 1,
    "stream_view_type": "NEW_IMAGE"
  }
}